// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cosmos/pools/v1beta1/query.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Imversed.Pools.V1Beta1 {
  public static partial class Query
  {
    static readonly string __ServiceName = "imversed.pools.v1beta1.Query";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QueryPoolsRequest> __Marshaller_imversed_pools_v1beta1_QueryPoolsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QueryPoolsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QueryPoolsResponse> __Marshaller_imversed_pools_v1beta1_QueryPoolsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QueryPoolsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QueryNumPoolsRequest> __Marshaller_imversed_pools_v1beta1_QueryNumPoolsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QueryNumPoolsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QueryNumPoolsResponse> __Marshaller_imversed_pools_v1beta1_QueryNumPoolsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QueryNumPoolsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QueryTotalLiquidityRequest> __Marshaller_imversed_pools_v1beta1_QueryTotalLiquidityRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QueryTotalLiquidityRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QueryTotalLiquidityResponse> __Marshaller_imversed_pools_v1beta1_QueryTotalLiquidityResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QueryTotalLiquidityResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QueryPoolRequest> __Marshaller_imversed_pools_v1beta1_QueryPoolRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QueryPoolRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QueryPoolResponse> __Marshaller_imversed_pools_v1beta1_QueryPoolResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QueryPoolResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QueryPoolParamsRequest> __Marshaller_imversed_pools_v1beta1_QueryPoolParamsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QueryPoolParamsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QueryPoolParamsResponse> __Marshaller_imversed_pools_v1beta1_QueryPoolParamsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QueryPoolParamsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QueryTotalSharesRequest> __Marshaller_imversed_pools_v1beta1_QueryTotalSharesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QueryTotalSharesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QueryTotalSharesResponse> __Marshaller_imversed_pools_v1beta1_QueryTotalSharesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QueryTotalSharesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QueryPoolAssetsRequest> __Marshaller_imversed_pools_v1beta1_QueryPoolAssetsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QueryPoolAssetsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QueryPoolAssetsResponse> __Marshaller_imversed_pools_v1beta1_QueryPoolAssetsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QueryPoolAssetsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QuerySpotPriceRequest> __Marshaller_imversed_pools_v1beta1_QuerySpotPriceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QuerySpotPriceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QuerySpotPriceResponse> __Marshaller_imversed_pools_v1beta1_QuerySpotPriceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QuerySpotPriceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInRequest> __Marshaller_imversed_pools_v1beta1_QuerySwapExactAmountInRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInResponse> __Marshaller_imversed_pools_v1beta1_QuerySwapExactAmountInResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutRequest> __Marshaller_imversed_pools_v1beta1_QuerySwapExactAmountOutRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutResponse> __Marshaller_imversed_pools_v1beta1_QuerySwapExactAmountOutResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Imversed.Pools.V1Beta1.QueryPoolsRequest, global::Imversed.Pools.V1Beta1.QueryPoolsResponse> __Method_Pools = new grpc::Method<global::Imversed.Pools.V1Beta1.QueryPoolsRequest, global::Imversed.Pools.V1Beta1.QueryPoolsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Pools",
        __Marshaller_imversed_pools_v1beta1_QueryPoolsRequest,
        __Marshaller_imversed_pools_v1beta1_QueryPoolsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Imversed.Pools.V1Beta1.QueryNumPoolsRequest, global::Imversed.Pools.V1Beta1.QueryNumPoolsResponse> __Method_NumPools = new grpc::Method<global::Imversed.Pools.V1Beta1.QueryNumPoolsRequest, global::Imversed.Pools.V1Beta1.QueryNumPoolsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "NumPools",
        __Marshaller_imversed_pools_v1beta1_QueryNumPoolsRequest,
        __Marshaller_imversed_pools_v1beta1_QueryNumPoolsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Imversed.Pools.V1Beta1.QueryTotalLiquidityRequest, global::Imversed.Pools.V1Beta1.QueryTotalLiquidityResponse> __Method_TotalLiquidity = new grpc::Method<global::Imversed.Pools.V1Beta1.QueryTotalLiquidityRequest, global::Imversed.Pools.V1Beta1.QueryTotalLiquidityResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TotalLiquidity",
        __Marshaller_imversed_pools_v1beta1_QueryTotalLiquidityRequest,
        __Marshaller_imversed_pools_v1beta1_QueryTotalLiquidityResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Imversed.Pools.V1Beta1.QueryPoolRequest, global::Imversed.Pools.V1Beta1.QueryPoolResponse> __Method_Pool = new grpc::Method<global::Imversed.Pools.V1Beta1.QueryPoolRequest, global::Imversed.Pools.V1Beta1.QueryPoolResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Pool",
        __Marshaller_imversed_pools_v1beta1_QueryPoolRequest,
        __Marshaller_imversed_pools_v1beta1_QueryPoolResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Imversed.Pools.V1Beta1.QueryPoolParamsRequest, global::Imversed.Pools.V1Beta1.QueryPoolParamsResponse> __Method_PoolParams = new grpc::Method<global::Imversed.Pools.V1Beta1.QueryPoolParamsRequest, global::Imversed.Pools.V1Beta1.QueryPoolParamsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PoolParams",
        __Marshaller_imversed_pools_v1beta1_QueryPoolParamsRequest,
        __Marshaller_imversed_pools_v1beta1_QueryPoolParamsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Imversed.Pools.V1Beta1.QueryTotalSharesRequest, global::Imversed.Pools.V1Beta1.QueryTotalSharesResponse> __Method_TotalShares = new grpc::Method<global::Imversed.Pools.V1Beta1.QueryTotalSharesRequest, global::Imversed.Pools.V1Beta1.QueryTotalSharesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TotalShares",
        __Marshaller_imversed_pools_v1beta1_QueryTotalSharesRequest,
        __Marshaller_imversed_pools_v1beta1_QueryTotalSharesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Imversed.Pools.V1Beta1.QueryPoolAssetsRequest, global::Imversed.Pools.V1Beta1.QueryPoolAssetsResponse> __Method_PoolAssets = new grpc::Method<global::Imversed.Pools.V1Beta1.QueryPoolAssetsRequest, global::Imversed.Pools.V1Beta1.QueryPoolAssetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PoolAssets",
        __Marshaller_imversed_pools_v1beta1_QueryPoolAssetsRequest,
        __Marshaller_imversed_pools_v1beta1_QueryPoolAssetsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Imversed.Pools.V1Beta1.QuerySpotPriceRequest, global::Imversed.Pools.V1Beta1.QuerySpotPriceResponse> __Method_SpotPrice = new grpc::Method<global::Imversed.Pools.V1Beta1.QuerySpotPriceRequest, global::Imversed.Pools.V1Beta1.QuerySpotPriceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SpotPrice",
        __Marshaller_imversed_pools_v1beta1_QuerySpotPriceRequest,
        __Marshaller_imversed_pools_v1beta1_QuerySpotPriceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInRequest, global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInResponse> __Method_EstimateSwapExactAmountIn = new grpc::Method<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInRequest, global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EstimateSwapExactAmountIn",
        __Marshaller_imversed_pools_v1beta1_QuerySwapExactAmountInRequest,
        __Marshaller_imversed_pools_v1beta1_QuerySwapExactAmountInResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutRequest, global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutResponse> __Method_EstimateSwapExactAmountOut = new grpc::Method<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutRequest, global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EstimateSwapExactAmountOut",
        __Marshaller_imversed_pools_v1beta1_QuerySwapExactAmountOutRequest,
        __Marshaller_imversed_pools_v1beta1_QuerySwapExactAmountOutResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Imversed.Pools.V1Beta1.QueryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Query</summary>
    [grpc::BindServiceMethod(typeof(Query), "BindService")]
    public abstract partial class QueryBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Imversed.Pools.V1Beta1.QueryPoolsResponse> Pools(global::Imversed.Pools.V1Beta1.QueryPoolsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Imversed.Pools.V1Beta1.QueryNumPoolsResponse> NumPools(global::Imversed.Pools.V1Beta1.QueryNumPoolsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Imversed.Pools.V1Beta1.QueryTotalLiquidityResponse> TotalLiquidity(global::Imversed.Pools.V1Beta1.QueryTotalLiquidityRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Per Pool gRPC Endpoints
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Imversed.Pools.V1Beta1.QueryPoolResponse> Pool(global::Imversed.Pools.V1Beta1.QueryPoolRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Imversed.Pools.V1Beta1.QueryPoolParamsResponse> PoolParams(global::Imversed.Pools.V1Beta1.QueryPoolParamsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Imversed.Pools.V1Beta1.QueryTotalSharesResponse> TotalShares(global::Imversed.Pools.V1Beta1.QueryTotalSharesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Imversed.Pools.V1Beta1.QueryPoolAssetsResponse> PoolAssets(global::Imversed.Pools.V1Beta1.QueryPoolAssetsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Imversed.Pools.V1Beta1.QuerySpotPriceResponse> SpotPrice(global::Imversed.Pools.V1Beta1.QuerySpotPriceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Estimate the swap.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInResponse> EstimateSwapExactAmountIn(global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutResponse> EstimateSwapExactAmountOut(global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for Query</summary>
    public partial class QueryClient : grpc::ClientBase<QueryClient>
    {
      /// <summary>Creates a new client for Query</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for Query that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public QueryClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected QueryClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QueryPoolsResponse Pools(global::Imversed.Pools.V1Beta1.QueryPoolsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Pools(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QueryPoolsResponse Pools(global::Imversed.Pools.V1Beta1.QueryPoolsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Pools, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QueryPoolsResponse> PoolsAsync(global::Imversed.Pools.V1Beta1.QueryPoolsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PoolsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QueryPoolsResponse> PoolsAsync(global::Imversed.Pools.V1Beta1.QueryPoolsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Pools, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QueryNumPoolsResponse NumPools(global::Imversed.Pools.V1Beta1.QueryNumPoolsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NumPools(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QueryNumPoolsResponse NumPools(global::Imversed.Pools.V1Beta1.QueryNumPoolsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_NumPools, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QueryNumPoolsResponse> NumPoolsAsync(global::Imversed.Pools.V1Beta1.QueryNumPoolsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return NumPoolsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QueryNumPoolsResponse> NumPoolsAsync(global::Imversed.Pools.V1Beta1.QueryNumPoolsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_NumPools, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QueryTotalLiquidityResponse TotalLiquidity(global::Imversed.Pools.V1Beta1.QueryTotalLiquidityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TotalLiquidity(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QueryTotalLiquidityResponse TotalLiquidity(global::Imversed.Pools.V1Beta1.QueryTotalLiquidityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TotalLiquidity, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QueryTotalLiquidityResponse> TotalLiquidityAsync(global::Imversed.Pools.V1Beta1.QueryTotalLiquidityRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TotalLiquidityAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QueryTotalLiquidityResponse> TotalLiquidityAsync(global::Imversed.Pools.V1Beta1.QueryTotalLiquidityRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TotalLiquidity, null, options, request);
      }
      /// <summary>
      /// Per Pool gRPC Endpoints
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QueryPoolResponse Pool(global::Imversed.Pools.V1Beta1.QueryPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Pool(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Per Pool gRPC Endpoints
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QueryPoolResponse Pool(global::Imversed.Pools.V1Beta1.QueryPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Pool, null, options, request);
      }
      /// <summary>
      /// Per Pool gRPC Endpoints
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QueryPoolResponse> PoolAsync(global::Imversed.Pools.V1Beta1.QueryPoolRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PoolAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Per Pool gRPC Endpoints
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QueryPoolResponse> PoolAsync(global::Imversed.Pools.V1Beta1.QueryPoolRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Pool, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QueryPoolParamsResponse PoolParams(global::Imversed.Pools.V1Beta1.QueryPoolParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PoolParams(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QueryPoolParamsResponse PoolParams(global::Imversed.Pools.V1Beta1.QueryPoolParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PoolParams, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QueryPoolParamsResponse> PoolParamsAsync(global::Imversed.Pools.V1Beta1.QueryPoolParamsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PoolParamsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QueryPoolParamsResponse> PoolParamsAsync(global::Imversed.Pools.V1Beta1.QueryPoolParamsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PoolParams, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QueryTotalSharesResponse TotalShares(global::Imversed.Pools.V1Beta1.QueryTotalSharesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TotalShares(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QueryTotalSharesResponse TotalShares(global::Imversed.Pools.V1Beta1.QueryTotalSharesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TotalShares, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QueryTotalSharesResponse> TotalSharesAsync(global::Imversed.Pools.V1Beta1.QueryTotalSharesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TotalSharesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QueryTotalSharesResponse> TotalSharesAsync(global::Imversed.Pools.V1Beta1.QueryTotalSharesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TotalShares, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QueryPoolAssetsResponse PoolAssets(global::Imversed.Pools.V1Beta1.QueryPoolAssetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PoolAssets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QueryPoolAssetsResponse PoolAssets(global::Imversed.Pools.V1Beta1.QueryPoolAssetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PoolAssets, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QueryPoolAssetsResponse> PoolAssetsAsync(global::Imversed.Pools.V1Beta1.QueryPoolAssetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PoolAssetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QueryPoolAssetsResponse> PoolAssetsAsync(global::Imversed.Pools.V1Beta1.QueryPoolAssetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PoolAssets, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QuerySpotPriceResponse SpotPrice(global::Imversed.Pools.V1Beta1.QuerySpotPriceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SpotPrice(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QuerySpotPriceResponse SpotPrice(global::Imversed.Pools.V1Beta1.QuerySpotPriceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SpotPrice, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QuerySpotPriceResponse> SpotPriceAsync(global::Imversed.Pools.V1Beta1.QuerySpotPriceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SpotPriceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QuerySpotPriceResponse> SpotPriceAsync(global::Imversed.Pools.V1Beta1.QuerySpotPriceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SpotPrice, null, options, request);
      }
      /// <summary>
      /// Estimate the swap.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInResponse EstimateSwapExactAmountIn(global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EstimateSwapExactAmountIn(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Estimate the swap.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInResponse EstimateSwapExactAmountIn(global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EstimateSwapExactAmountIn, null, options, request);
      }
      /// <summary>
      /// Estimate the swap.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInResponse> EstimateSwapExactAmountInAsync(global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EstimateSwapExactAmountInAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Estimate the swap.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInResponse> EstimateSwapExactAmountInAsync(global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EstimateSwapExactAmountIn, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutResponse EstimateSwapExactAmountOut(global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EstimateSwapExactAmountOut(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutResponse EstimateSwapExactAmountOut(global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EstimateSwapExactAmountOut, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutResponse> EstimateSwapExactAmountOutAsync(global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EstimateSwapExactAmountOutAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutResponse> EstimateSwapExactAmountOutAsync(global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EstimateSwapExactAmountOut, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override QueryClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new QueryClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(QueryBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Pools, serviceImpl.Pools)
          .AddMethod(__Method_NumPools, serviceImpl.NumPools)
          .AddMethod(__Method_TotalLiquidity, serviceImpl.TotalLiquidity)
          .AddMethod(__Method_Pool, serviceImpl.Pool)
          .AddMethod(__Method_PoolParams, serviceImpl.PoolParams)
          .AddMethod(__Method_TotalShares, serviceImpl.TotalShares)
          .AddMethod(__Method_PoolAssets, serviceImpl.PoolAssets)
          .AddMethod(__Method_SpotPrice, serviceImpl.SpotPrice)
          .AddMethod(__Method_EstimateSwapExactAmountIn, serviceImpl.EstimateSwapExactAmountIn)
          .AddMethod(__Method_EstimateSwapExactAmountOut, serviceImpl.EstimateSwapExactAmountOut).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, QueryBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Pools, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Imversed.Pools.V1Beta1.QueryPoolsRequest, global::Imversed.Pools.V1Beta1.QueryPoolsResponse>(serviceImpl.Pools));
      serviceBinder.AddMethod(__Method_NumPools, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Imversed.Pools.V1Beta1.QueryNumPoolsRequest, global::Imversed.Pools.V1Beta1.QueryNumPoolsResponse>(serviceImpl.NumPools));
      serviceBinder.AddMethod(__Method_TotalLiquidity, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Imversed.Pools.V1Beta1.QueryTotalLiquidityRequest, global::Imversed.Pools.V1Beta1.QueryTotalLiquidityResponse>(serviceImpl.TotalLiquidity));
      serviceBinder.AddMethod(__Method_Pool, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Imversed.Pools.V1Beta1.QueryPoolRequest, global::Imversed.Pools.V1Beta1.QueryPoolResponse>(serviceImpl.Pool));
      serviceBinder.AddMethod(__Method_PoolParams, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Imversed.Pools.V1Beta1.QueryPoolParamsRequest, global::Imversed.Pools.V1Beta1.QueryPoolParamsResponse>(serviceImpl.PoolParams));
      serviceBinder.AddMethod(__Method_TotalShares, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Imversed.Pools.V1Beta1.QueryTotalSharesRequest, global::Imversed.Pools.V1Beta1.QueryTotalSharesResponse>(serviceImpl.TotalShares));
      serviceBinder.AddMethod(__Method_PoolAssets, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Imversed.Pools.V1Beta1.QueryPoolAssetsRequest, global::Imversed.Pools.V1Beta1.QueryPoolAssetsResponse>(serviceImpl.PoolAssets));
      serviceBinder.AddMethod(__Method_SpotPrice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Imversed.Pools.V1Beta1.QuerySpotPriceRequest, global::Imversed.Pools.V1Beta1.QuerySpotPriceResponse>(serviceImpl.SpotPrice));
      serviceBinder.AddMethod(__Method_EstimateSwapExactAmountIn, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInRequest, global::Imversed.Pools.V1Beta1.QuerySwapExactAmountInResponse>(serviceImpl.EstimateSwapExactAmountIn));
      serviceBinder.AddMethod(__Method_EstimateSwapExactAmountOut, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutRequest, global::Imversed.Pools.V1Beta1.QuerySwapExactAmountOutResponse>(serviceImpl.EstimateSwapExactAmountOut));
    }

  }
}
#endregion
